name: Agentic Planner
on:
  schedule:
    # Every 30 minutes
    - cron: "*/30 * * * *"
  workflow_dispatch:
permissions:
  contents: write
  models: read
  issues: write
  pull-requests: write
concurrency:
  group: "nlact-.github/workflows/agentic-planner"
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup MCPs
        run: |
          mkdir -p /tmp/mcp-config
          cat > /tmp/mcp-config/mcp-servers.json << 'EOF'
          {
            "mcpServers": {
              "github": {
                "command": "docker",
                "args": [
                  "run",
                  "-i",
                  "--rm",
                  "-e",
                  "GITHUB_PERSONAL_ACCESS_TOKEN",
                  "ghcr.io/github/github-mcp-server:sha-7aced2b"
                ],
                "env": {
                  "GITHUB_PERSONAL_ACCESS_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
                }
              }
            }
          }
          EOF
      - name: Create prompt
        run: |
          mkdir -p /tmp/nlact-prompts
          cat > /tmp/nlact-prompts/prompt.txt << 'EOF'
          
          # Agentic Planner
          
          ## Components
          
          
          ### Output Report implemented via GitHub Issue
          
          You will share one "output issue" with all other developers entitled "Team Status DATE" where DATE is the date, UTC time, UK date format DD/MM/YYYY. If an open issue with this title doesn't exist, create it with content describing what it's for. Ignore closed issues with this title.
          
          You and other team members will add comments to this issue as you progress. The comments will be used as the "output report" for the workflow.
          
          When you start your work, add an issue comment to the output issue saying you are starting work and briefly saying who you are and what you are doing.
          
          Before each tool use, add another issue comment saying you are starting work and briefly saying who you are, what you've done and what you are about to do.
          
          If you encounter a failure or don't have access to a tool, add a comment to the issue noting the problem, explaining what you would have done if you had access, and give your analysis of what needs to be fixed.
          
          At the end of the workflow, saying you are starting work and briefly saying who you are and what you did.
          
          Include this at the end of each added issue comment:
          
          ```
          > AI-generated content by [${{ github.workflow }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) may contain mistakes.
          ```
          
          ## Job Description
          
          
          Your job is to act as an agentic planner for the GitHub repository `${{ env.GITHUB_REPOSITORY }}`. You will analyze the repository, to check that issues are created that reflect the current project plan and priorities. Other developers will use these issues to implement the project plan.
          
          Study the state of the repository including TODOs, existing open issues, recent completed issues. Formulate a plan for the remaining work to achieve the objectives. Open new issues and add comments to existing issues as needed to reflect your overall project plan.
          
          If one issue depends on another, make sure to link them together. If you find that an issue is no longer relevant, close it.
          
          You an read code, search the web and use other tools to help you understand the project and its requirements. You can also use the GitHub MCP tools to create new issues and comment on issues.
          
          If a developer has already started working on an issue, this will be noted in the isssue comments. Leave that issue open and do not touch it. If you want to leave a comment on the issue noting that some adjustment is needed, you can do so.
          
          If you need to update an existing file, e.g. a README,md to reflect that some work has been done, you can do that too by creating a pull request using the GitHub MCP tools.
          
          > NOTE: If you are refused permission to run particular 'bash' commands, or need to request access to other tools or resources, include a request for access in the output report, explaining the exact prefix of bash commands needed or other resources you need access to.
          
          Include a link like this at the end of each new issue created or issue comment made:
          
          ```
          > AI-generated content by [${{ github.workflow }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) may contain mistakes.
          ```
          EOF
      - name: Run Claude Code
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt_file: /tmp/nlact-prompts/prompt.txt
          allowed_tools: "Bash,Edit,Glob,Grep,LS,MultiEdit,NotebookEdit,NotebookRead,Read,Task,WebFetch,WebSearch,Write,mcp__github__add_issue_comment,mcp__github__create_issue,mcp__github__create_issue_comment,mcp__github__create_or_update_file,mcp__github__create_pull_request,mcp__github__get_file_contents,mcp__github__get_issue,mcp__github__get_issue_comments,mcp__github__get_pull_request,mcp__github__list_files,mcp__github__list_issues,mcp__github__list_pull_requests,mcp__github__search_code,mcp__github__search_issues,mcp__github__update_issue"
          timeout_minutes: 15
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          mcp_config: /tmp/mcp-config/mcp-servers.json
          claude_env: |
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
